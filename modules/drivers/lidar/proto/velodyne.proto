syntax = "proto2";

package apollo.drivers.velodyne;

import "modules/common/proto/header.proto";

enum Model {
  UNKNOWN = 0;
  HDL64E_S3S = 1;
  HDL64E_S3D = 2;
  HDL64E_S2 = 3;
  HDL32E = 4;
  VLP16 = 5;
  VLP32C = 6;
  VLS128 = 7;
}

enum Mode {
  STRONGEST = 1;
  LAST = 2;
  DUAL = 3;
}

// 激光雷达原始数据包
message VelodynePacket {
  optional uint64 stamp = 1; ///< 时间戳为开始接收和完成接收数据的中间时刻
  optional bytes data = 2; ///< 根据UDP协议读取的元素数据，
}

// 激光雷达原始数据，对应一个激光点云
message VelodyneScan {
  optional apollo.common.Header header = 1;
  optional Model model = 2;  // velodyne device model
  optional Mode mode = 3;    // velodyne work mode

  repeated VelodynePacket firing_pkts = 4; // 原始数据包的个数由npackets指定

  // for HDL32 and VLP16
  repeated VelodynePacket positioning_pkts = 5;
  // velodyne device serial number, corresponds to a specific calibration file
  optional string sn = 6;
  optional uint64 basetime = 7 [default = 0];
}
